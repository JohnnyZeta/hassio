
# #===================
# #=== Input Booleans
# #===================
# input_boolean:
#   telegram_holiday_irrigation_steve:

#   telegram_holiday_irrigation_sarah:


# #================
# #=== Automations
# #================
# automation:

#   #===================================================
#   #=== Notify about irrigation events when on holiday
#   #===================================================
#   - alias: Irrigation - Notify About Irrigation Events When On Holiday
#     trigger:
#       - platform: state
#         entity_id:
#         - input_boolean.cycle1_running
#         - input_boolean.cycle2_running

#     condition:
#       - condition: state
#         entity_id: binary_sensor.holiday_mode
#         state: 'on'
    
#       - condition: or
#         conditions:
#           - condition: state
#             entity_id: input_boolean.telegram_holiday_irrigation_steve
#             state: 'on'
#           - condition: state
#             entity_id: input_boolean.telegram_holiday_irrigation_sarah
#             state: 'on'         

#     action:
#       - service_template: >
#           {% if trigger.to_state.state == 'on' %}
#             script.notify_irrigation_start
#           {% else %}
#             script.notify_irrigation_end
#           {% endif %}
#         data_template:
#           cycle: >
#             {% if trigger.entity_id == 'input_boolean.cycle1_running' %}
#               1
#             {% else %}
#               2
#             {% endif %}
        
          
# #============
# #=== Scripts
# #============
# script:

#   #===============================
#   #=== Notify when a cycle starts
#   #===   Called with
#   #===    {{ cycle }} 
#   #===============================
#   notify_irrigation_start:    
#     description: Notify when a cycle starts
#     fields: 
#       cycle:
#         description: Cycle started
#         example: 1

#     sequence:
#       - wait_template: >
#           {{ is_state('script.notify', 'off') }}

#       - service: script.notify
#         data_template:
#           tell: >
#             {% if is_state('input_boolean.telegram_holiday_irrigation_steve', 'on') and
#                   is_state('input_boolean.telegram_holiday_irrigation_sarah', 'on') %}
#               steve_and_sarah
#             {% elif is_state('input_boolean.telegram_holiday_irrigation_sarah', 'on') %}
#               sarah
#             {% else %}
#               steve
#             {% endif %}
#           message: >
#             {% set cycle_map = {
#               '1': 'morning',
#               '2': 'afternoon'
#             } %}
#             {% set cycle_time = cycle_map[cycle] %}

#             {% if is_state('input_boolean.cycle1_use_weather_adjustment', 'off') %}
#               {% set ns = namespace(total_time = 0) %}
#               {% for zone in states if zone.entity_id.startswith('input_number.cycle1_zone') %}
#                 {% set ns.total_time = ns.total_time + states(zone.entity_id) | int %}
#               {% endfor %}
#             {% else %}
#               {% set ns = namespace(total_time = 0) %}
#               {% for zone in states if zone.entity_id.startswith('input_number.adjusted_cycle1_zone') %}
#                 {% set ns.total_time = ns.total_time + states(zone.entity_id) | int %}
#               {% endfor %}
#             {% endif %}

#             I thought you'd like to know that the {{cycle_time}} irrigation cycle has just started.


#             It should take about {{ ns.total_time }} minutes to finish but I'll let you know when it has.


#             Don't worry your garden is safe with me. I hope you're having a lovely holiday!


#   #=============================
#   #=== Notify when a cycle ends
#   #===   Called with
#   #===    {{ cycle }} 
#   #=============================
#   notify_irrigation_end:    
#     description: Notify when a cycle ends
#     fields: 
#       cycle:
#         description: Cycle ended
#         example: 1

#     sequence:
#       - wait_template: >
#           {{ is_state('script.notify', 'off') }}

#       - service: script.notify
#         data_template:
#           tell: >
#             {% if is_state('input_boolean.telegram_holiday_irrigation_steve', 'on') and
#                   is_state('input_boolean.telegram_holiday_irrigation_sarah', 'on') %}
#               steve_and_sarah
#             {% elif is_state('input_boolean.telegram_holiday_irrigation_sarah', 'on') %}
#               sarah
#             {% else %}
#               steve
#             {% endif %}
#           message: >
#             {% set cycle_map = {
#               '1': 'morning',
#               '2': 'afternoon'
#             } %}
#             {% set cycle_time = cycle_map[cycle] %}

#             All the {{cycle_time}} watering is done.
